$date
	Tue Jan  7 16:04:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 1 " sign $end
$var wire 1 # parity $end
$var wire 1 $ overflow $end
$var wire 1 % carry $end
$var wire 4 & Z [3:0] $end
$var reg 1 ' Cin $end
$var reg 4 ( X [3:0] $end
$var reg 4 ) Y [3:0] $end
$scope module DUT $end
$var wire 1 ' Cin $end
$var wire 4 * X [3:0] $end
$var wire 4 + Y [3:0] $end
$var wire 1 , c1 $end
$var wire 1 - c2 $end
$var wire 1 . c3 $end
$var wire 1 % carry $end
$var wire 1 / g0 $end
$var wire 1 0 g1 $end
$var wire 1 1 g2 $end
$var wire 1 2 g3 $end
$var wire 1 $ overflow $end
$var wire 1 3 p0 $end
$var wire 1 4 p1 $end
$var wire 1 5 p2 $end
$var wire 1 6 p3 $end
$var wire 1 ! zero $end
$var wire 1 " sign $end
$var wire 1 # parity $end
$var wire 4 7 Z [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
bx +
bx *
bx )
bx (
x'
bx &
x%
x$
x#
x"
x!
$end
#50
0$
0"
1#
0%
0.
1-
0!
b101 &
b101 7
0,
0/
13
10
04
01
05
02
06
0'
b11 )
b11 +
b10 (
b10 *
#100
1!
1%
1.
0"
1,
1#
b0 &
b0 7
00
14
1/
03
15
16
b1 )
b1 +
b1111 (
b1111 *
#150
1$
0%
1"
1#
0!
b1100 &
b1100 7
11
05
06
b101 )
b101 +
b111 (
b111 *
#200
0"
0.
1%
0-
1$
0,
0#
b111 &
b111 7
0/
13
01
15
12
b1111 )
b1111 +
b1000 (
b1000 *
#250
0%
0$
1!
1#
b0 &
b0 7
03
04
05
02
b0 )
b0 +
b0 (
b0 *
#300
1"
1#
0!
b1111 &
b1111 7
13
15
14
16
b101 )
b101 +
b1010 (
b1010 *
#350
0"
1!
1%
1.
1-
1,
1#
b0 &
b0 7
1'
b11 )
b11 +
b1100 (
b1100 *
#400
0"
1%
1.
0#
0!
b100 &
b100 7
11
05
b110 )
b110 +
b1101 (
b1101 *
#450
1"
0$
1/
03
12
06
10
04
0#
b1110 &
b1110 7
0'
b1111 )
b1111 +
b1111 (
b1111 *
#500
