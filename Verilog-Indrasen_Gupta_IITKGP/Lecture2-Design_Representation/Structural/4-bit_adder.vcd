$date
	Mon Jan  6 12:45:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cy $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C $end
$scope module DUT $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % C $end
$var wire 3 ( c_out [2:0] $end
$var wire 4 ) S [3:0] $end
$var wire 1 " Cy $end
$scope module FD1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % C $end
$var wire 1 , S $end
$var wire 1 - Cy $end
$scope module C1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % C $end
$var wire 1 - Cy $end
$var wire 1 . t1 $end
$var wire 1 / t2 $end
$var wire 1 0 t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % C $end
$var wire 1 , S $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope module FD2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 C $end
$var wire 1 5 S $end
$var wire 1 6 Cy $end
$scope module C1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 C $end
$var wire 1 6 Cy $end
$var wire 1 7 t1 $end
$var wire 1 8 t2 $end
$var wire 1 9 t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 C $end
$var wire 1 5 S $end
$var wire 1 : sum $end
$upscope $end
$upscope $end
$scope module FD3 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = C $end
$var wire 1 > S $end
$var wire 1 ? Cy $end
$scope module C1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = C $end
$var wire 1 ? Cy $end
$var wire 1 @ t1 $end
$var wire 1 A t2 $end
$var wire 1 B t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = C $end
$var wire 1 > S $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope module FD4 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F C $end
$var wire 1 G S $end
$var wire 1 " Cy $end
$scope module C1 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F C $end
$var wire 1 " Cy $end
$var wire 1 H t1 $end
$var wire 1 I t2 $end
$var wire 1 J t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F C $end
$var wire 1 G S $end
$var wire 1 K sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
0>
0G
05
0=
0F
04
b0 !
b0 )
0,
06
0?
0"
b0 (
0-
08
0A
0I
0.
01
07
09
0:
0@
0B
0C
0H
0J
0K
0/
00
0+
03
0<
0E
0*
02
0;
0D
0%
b0 $
b0 '
b0 #
b0 &
#15
1>
1=
16
18
14
b100 !
b100 )
05
b11 (
1-
1:
1.
1+
13
1*
b11 $
b11 '
b1 #
b1 &
#25
1I
1J
1G
1F
b1110 !
b1110 )
15
b111 (
1?
1"
1A
17
19
0:
1@
1B
1H
1<
1E
12
1;
1D
b1111 $
b1111 '
b1111 #
b1111 &
#35
0"
0J
0F
0?
0A
0=
06
09
04
15
1G
b0 (
0-
1,
b1111 !
b1111 )
1>
07
08
1:
0H
0I
1K
0.
11
0@
0B
1C
03
0E
0*
0;
b101 $
b101 '
b1010 #
b1010 &
#45
1"
1J
0G
1F
1?
1B
0>
1=
16
19
05
14
b111 (
1-
1.
01
1/
10
b1 !
b1 )
1,
0<
1*
1;
1%
b1 $
b1 '
b1111 #
b1111 &
#55
15
1>
b1111 !
b1111 )
1G
17
18
0:
1@
1A
0C
1H
1I
0K
13
1<
1E
b1111 $
b1111 '
#65
0,
05
b1000 !
b1000 )
0>
0.
0/
11
07
08
1:
0@
0B
1C
0+
03
0;
b1100 $
b1100 '
b1011 #
b1011 &
#70
